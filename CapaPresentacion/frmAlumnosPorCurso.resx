<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDesactivarFiltro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnActivarFiltro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAAd0SU1FB98JFgcSC7230bYAAARXSURBVEhLrZVZTFRXGMdvKShVeGgVpCyyikEZ
        ZF91GBkuzD7MAjMDM8MMwwhSNrG0Pmg0TUiTNnWp1WhbSwk744CDwLAXWRVSrQtLF9PEhz417VNjHyz/
        3rlzbaQxrQP8knO/k/v97jn57jn3XGJTeN8ZYprivLO7BSZRr+KT+KYU8d6T0W84M5vAhd+uEmnNB7fJ
        +tUDuTYlUi05YFtFSGnltITVRnox2vrxvxJAx1ybuJrfW4BkCxcpFpJu6VYS4eVRe2lhwzQQu7QjpUi9
        TiKjm4eMHh4OUo3dk4swfeR+xnIdt4bXmR5B6EZLJ7m9ErBvCJBpE4LTK8ThmyKwO3LuRRgidzGa6wCg
        o3pIZ1YMaVcP3xQiu08Csl+KnAEpeP2yP1POpxsoxY0W14u0T7a7aLRkkWeXgzcoA39IDtGwgmpK8Cyi
        HkrxdJrroANWYvfFIDf1iPZ0/rgOohElpGMq5I2rIZ/QQDmq+Z0IJIIZ3XX8L/vTMbs7Z79psnxVRg2s
        nCiEalIL9ZQeRVPFSPogQU1LG6VypvaBalIH5S0NCqaLoJnVQX/bCGGb8BKVdnda/wH3Dx7TW8spnKJj
        0ZjujPgbBbhjPAgmxJBOy6CYy4dsRP6IVRMdSUsvEvRxsIfQIjNLbqjm+dY8e/y1VEVoZehWOimkr2vg
        9mRFFc+U/EqOCyCZyqMHV89roFvQPuVdI0sYbS1kG18ksRUiuYNEYmc2ON0ipLZxLhMsgp7IvcRZ+YGW
        GILTmelhmDJ9LZ2UI29GDhU1uP6uDmWPzFDZ8zsdOi3/G4lVcTa9i4+kDsdxkIPEriyENLMQ1Rw3SKVf
        czg+53wcgRAPiNn6OSPks0oULhTC+J0BFctlMN8x/kJsI/xo6WUkNqZpM61iJHeRYLVn4M0vQ+HXFImQ
        NhbiLWn3CSXxFqMSplnz4/y5AnoC04MSVC6Xo26lCrHHYrIZ5eUE14VvT2rJHNzTnAjvz4Pg0xiBwJZ9
        2NMZC1Z3MtJtmd8GfBgYpp/Qf2RcMFHvXw3TfSM9Qf1PtSi2F37m5bv9/z863+N+O3yuhNh2fhXxTxVR
        lgTE2dKRYc8Cb1i4ZJ4ve1ZwR4US6hVVLpXjvcc1OP6wajm2jBXGDPNKuAd+EWELbo1GeOcBRFNVJPcd
        AmeYhOCWBPm3C6hF1uPo4hG8+2M1Tj858Rf/Eqlhnn0FXjjxwxuj2vZdT0SsLQ3pdg6yx/j0d6ChdlIp
        tQ41P7yDk0/qcWTU0M484gJBzrCD9PZktSZcTelj49AQF7wJERTUbnJs1QqqihM/16HuXuUype50+F5v
        u/rjY/aR56EtW5Pb0845qhBOSlada2FE9UoF6ldqnoo/5eU6zU2A3clukE0roFnQwPywFMe+r4R51HCR
        SjlPhI3y/Kck7hOd0S7onh1dLEPV3fKlCFVEKJ3YTAKEvlvkvbIi7YjmrOBCLpu5vXk8r8aBR4KbB9N1
        EYL4G0qg8uwy0tYLAAAAAElFTkSuQmCC
</value>
  </data>
</root>